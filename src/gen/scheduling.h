/*
 *  author: Suhas Vittal
 *  date:   12 October 2025
 * */

#ifndef GEN_SCHEDULING_h
#define GEN_SCHEDULING_h

#include "gen.h"

////////////////////////////////////////////////////
////////////////////////////////////////////////////

struct SC_SCHEDULE_INFO
{
    std::vector<stim_qubit_type> data_qubits;
    std::vector<stim_qubit_type> x_check_qubits;
    std::vector<stim_qubit_type> z_check_qubits;
    std::unordered_map<stim_qubit_type, std::vector<stim_qubit_type>> check_cx_order;

    std::unordered_set<stim_qubit_type> x_check_set;

    std::vector<stim_qubit_type> x_obs;
    std::vector<stim_qubit_type> z_obs;

    // a useful structure for looking up check qubits by row + column. If there is no
    // entry at a given location, then the entry is `NO_QUBIT` (will occur on boundary).

    SC_SCHEDULE_INFO(size_t dx, size_t dz, stim_qubit_type start_qubit=0);
};

////////////////////////////////////////////////////
////////////////////////////////////////////////////

// this runs code that makes sure CX schedules (i.e., those generated by `SC_SCHEDULE_INFO` are valid and do
// not schedule any qubits for multiple CX operations at the same time).
#define GEN_VERIFY_CX_SCHEDULE

#endif  // GEN_SCHEDULING_h
